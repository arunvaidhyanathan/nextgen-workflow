version: '3.8'

services:
  # PostgreSQL 16 Database
  postgres:
    image: postgres:16-alpine
    container_name: nextgen-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nextgen_workflow
      POSTGRES_INITDB_ARGS: "-E UTF8"
      TZ: UTC
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nextgen_workflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped

  # Cerbos Policy Decision Point (v0.14 as requested)
  cerbos:
    image: ghcr.io/cerbos/cerbos:0.14.0
    container_name: nextgen-cerbos
    ports:
      - "3592:3592"  # gRPC port
      - "3593:3593"  # HTTP port (for health checks and admin)
    volumes:
      - ./cerbos/policies:/policies:ro
      - ./cerbos/config/config.yaml:/config.yaml:ro
    command: ["server", "--config=/config.yaml"]
    environment:
      CERBOS_LOG_LEVEL: INFO
      TZ: UTC
    healthcheck:
      test: ["CMD", "cerbos", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped

  # Service Registry (Eureka)
  service-registry:
    image: eclipse-temurin:21-jdk-alpine
    container_name: nextgen-service-registry
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped
    volumes:
      - ./service-registry/target:/app:ro
      - ./logs:/logs
    working_dir: /app
    command: ["java", "-jar", "service-registry-1.0.0.jar"]

  # API Gateway
  api-gateway:
    image: eclipse-temurin:21-jdk-alpine
    container_name: nextgen-api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_URI=http://service-registry:8761/eureka
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka
    depends_on:
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped
    volumes:
      - ./api-gateway/target:/app:ro
      - ./logs:/logs
    working_dir: /app
    command: ["java", "-jar", "api-gateway-1.0.0.jar"]

  # Entitlement Service
  entitlement-service:
    image: eclipse-temurin:21-jdk-alpine
    container_name: nextgen-entitlement-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://postgres:5432/nextgen_workflow?currentSchema=entitlements
      - DB_USERNAME=entitlement_user
      - DB_PASSWORD=password
      - EUREKA_URI=http://service-registry:8761/eureka
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka
      - CERBOS_HOST=cerbos
      - CERBOS_PORT=3592
      - CERBOS_TLS_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
      cerbos:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped
    volumes:
      - ./entitlement-service/target:/app:ro
      - ./logs:/logs
    working_dir: /app
    command: ["java", "-jar", "entitlement-service-1.0.0.jar"]

  # Flowable Workflow Service
  flowable-wrapper-v2:
    image: eclipse-temurin:21-jdk-alpine
    container_name: nextgen-flowable-wrapper
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://postgres:5432/nextgen_workflow?currentSchema=flowable
      - DB_USERNAME=flowable_user
      - DB_PASSWORD=password
      - EUREKA_URI=http://service-registry:8761/eureka
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka
      - ENTITLEMENT_SERVICE_BASE_URL=http://entitlement-service:8081
      - WORKFLOW_DEFINITIONS_PATH=/app/bpmn
    volumes:
      - ./flowable-wrapper-v2/target:/app:ro
      - ./flowable-wrapper-v2/src/main/resources/bpmn:/app/bpmn:ro
      - ./logs:/logs
    depends_on:
      postgres:
        condition: service_healthy
      entitlement-service:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped
    working_dir: /app
    command: ["java", "-jar", "flowable-wrapper-v2-1.0.0.jar"]

  # OneCMS Service
  onecms-service:
    image: eclipse-temurin:21-jdk-alpine
    container_name: nextgen-onecms-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,dev
      - DB_URL=jdbc:postgresql://postgres:5432/nextgen_workflow?currentSchema=onecms
      - DB_USERNAME=onecms_user
      - DB_PASSWORD=password
      - EUREKA_URI=http://service-registry:8761/eureka
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka
      - ENTITLEMENT_SERVICE_BASE_URL=http://entitlement-service:8081
      - FLOWABLE_WORKFLOW_SERVICE_BASE_URL=http://flowable-wrapper-v2:8082
      - SERVICE_CLIENTS_ENTITLEMENT-SERVICE_BASE-URL=http://entitlement-service:8081
      - SERVICE_CLIENTS_FLOWABLE-CORE-WORKFLOW_BASE-URL=http://flowable-wrapper-v2:8082
    depends_on:
      postgres:
        condition: service_healthy
      entitlement-service:
        condition: service_healthy
      flowable-wrapper-v2:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nextgen-network
    restart: unless-stopped
    volumes:
      - ./onecms-service/target:/app:ro
      - ./logs:/logs
    working_dir: /app
    command: ["java", "-jar", "onecms-service-1.0.0.jar"]

  # PgAdmin for PostgreSQL management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nextgen-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@nextgen.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - nextgen-network
    profiles:
      - tools
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  nextgen-network:
    driver: bridge
    name: nextgen-network