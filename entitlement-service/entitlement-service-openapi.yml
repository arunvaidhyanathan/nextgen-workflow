openapi: 3.0.3
info:
  title: Entitlement Service API
  description: |
    NextGen Workflow Entitlement Service - Central authority for authentication, authorization, and user management.
    
    This service provides:
    - Session-based authentication
    - Cerbos policy-based authorization
    - User and role management
    - Business application management
    
    **Authentication**: All endpoints except `/api/auth/login` require session-based authentication via `X-Session-Id` header.
    
    **Authorization**: Fine-grained access control is provided through Cerbos policy engine integration.
  version: 1.0.0
  contact:
    name: NextGen Workflow Team
servers:
  - url: http://localhost:8081
    description: Development server

tags:
  - name: Authentication
    description: User authentication and session management
  - name: Authorization
    description: Policy-based authorization checks
  - name: Users
    description: User management operations
  - name: Business Applications
    description: Business application management
  - name: Business App Roles
    description: Business application role management
  - name: User Business App Roles
    description: User role assignment management
  - name: Policies
    description: Policy management and validation
  - name: Departments
    description: Department management operations
  - name: User Department Assignments
    description: User department assignment management
  - name: System Testing
    description: System testing and validation endpoints
  - name: EMS
    description: Enterprise Management System API for frontend integration

paths:
  # EMS endpoints for frontend integration
  /api/ems/v1/whoami:
    get:
      tags:
        - EMS
      summary: Get current user context
      description: |
        Retrieve comprehensive user information including roles, departments, 
        and permissions for frontend application use.
        
        **Authentication**: Requires either X-Session-Id or X-User-Id header
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: User context retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhoAmIResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          
  /api/ems/v1/caniuse:
    post:
      tags:
        - EMS
      summary: Check user authorization
      description: |
        Check if the current user can perform specific actions on resources.
        Returns detailed authorization decisions for frontend use.
        
        **Authentication**: Requires either X-Session-Id or X-User-Id header
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMSAuthRequest'
            examples:
              specific_action:
                summary: Check specific action on resource
                value:
                  resourceId: "CMS-10-20045"
                  actionId: "CREATE_CASE"
                  resourceType: "case"
                  context:
                    department: "HR"
                    priority: "HIGH"
              resource_check:
                summary: Check common actions for resource type
                value:
                  resourceType: "case"
                  context:
                    department: "IU"
              minimal_check:
                summary: Minimal authorization check
                value:
                  actionId: "READ_CASE"
      responses:
        '200':
          description: Authorization check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMSAuthResponse'
        '400':
          description: Bad request - invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

paths:
  # Authentication endpoints
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and create session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: alice.intake
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  sessionId:
                    type: string
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  user:
                    $ref: '#/components/schemas/UserInfo'
                  message:
                    type: string
                    example: "Login successful"
        '400':
          description: Bad request - missing credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials or inactive user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Invalidate user session
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Alternative way to provide session ID
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logout successful"

  /api/auth/validate-session:
    get:
      tags:
        - Authentication
      summary: Validate session
      description: Check if user session is valid and active
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: Session is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/UserInfo'
                  message:
                    type: string
                    example: "Session is valid"
        '401':
          description: Invalid or expired session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

