openapi: 3.0.3
info:
  title: OneCMS Service API
  description: |
    NextGen Workflow OneCMS Service - Case Management System microservice for comprehensive case management.
    
    This service provides:
    - Case lifecycle management (CRUD operations)
    - Allegation management with GRC taxonomy
    - Case entity management (people/organizations)
    - Case narrative and comment management
    - Workflow integration via flowable-wrapper-v2
    - Authorization delegation to entitlement-service
    
    **Authentication**: All endpoints require session-based authentication via API Gateway with `X-User-Id` header.
    
    **Authorization**: Fine-grained access control delegated to entitlement-service via Cerbos policy engine.
    
    **Microservices Integration**: 
    - Service-to-service communication via Eureka service discovery
    - Circuit breaker patterns for resilience
    - Database per service pattern with PostgreSQL `onecms` schema
  version: 1.0.0
  contact:
    name: NextGen Workflow Team
servers:
  - url: http://localhost:8083/api
    description: Development server (direct to OneCMS service)
  - url: http://localhost:8080/api
    description: Development server (via API Gateway)

tags:
  - name: Case Management
    description: Core case management operations
  - name: System
    description: System health and testing endpoints

paths:
  # System endpoints
  /cms/v1/test:
    get:
      tags:
        - System
      summary: Health check
      description: Basic health check endpoint
      responses:
        '200':
          description: Service is running
          content:
            text/plain:
              schema:
                type: string
                example: "Case management controller is working!"

  /cms/v1/auth-test:
    get:
      tags:
        - System
      summary: Authentication test
      description: Test endpoint to verify session-based authentication and authorization
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    example: true
                  userId:
                    type: string
                    example: "user123"
                  authMethod:
                    type: string
                    example: "session-based"
                  canCreateCase:
                    type: boolean
                    example: true
                  canViewCases:
                    type: boolean
                    example: true
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  # Case Management endpoints
  /cms/v1/createcase:
    post:
      tags:
        - Case Management
      summary: Create a new case
      description: Create a new case with allegations, entities, and narratives. Automatically starts workflow process.
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseWithAllegationsRequest'
      responses:
        '201':
          description: Case created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseWithAllegationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /cms/v1/cases:
    get:
      tags:
        - Case Management
      summary: Get all cases
      description: Retrieve a paginated list of all cases in the system
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Page number (0-based)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of cases per page
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [OPEN, IN_PROGRESS, CLOSED, CANCELLED]
          description: Filter by case status
      responses:
        '200':
          description: Cases retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseWithAllegationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cms/v1/createcase/multi-department:
    post:
      tags:
        - Case Management
      summary: Create a multi-department case
      description: Create a complex case that requires multiple departments (HR, Legal, CSIS). Requires at least 2 allegations with different classifications.
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseWithAllegationsRequest'
      responses:
        '201':
          description: Multi-department case created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseWithAllegationsResponse'
        '400':
          description: Invalid request - requires at least 2 allegations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /cms/v1/cases/{caseNumber}:
    get:
      tags:
        - Case Management
      summary: Get case details
      description: Retrieve detailed information about a specific case
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
        - name: caseNumber
          in: path
          required: true
          schema:
            type: string
          description: Case number (e.g., CMS-2025-000001)
          example: "CMS-2025-000001"
      responses:
        '200':
          description: Case details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseWithAllegationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /cms/v1/my-cases:
    get:
      tags:
        - Case Management
      summary: Get my cases
      description: Get cases accessible to the current user for dashboard
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Page number (0-based)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of cases per page
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [OPEN, IN_PROGRESS, CLOSED, CANCELLED]
          description: Filter by case status
      responses:
        '200':
          description: User's cases retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseWithAllegationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cms/v1/dashboard-cases:
    get:
      tags:
        - Case Management
      summary: Get cases for dashboard
      description: Get cases for dashboard without strict authorization (for dashboard display)
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Page number (0-based)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of cases per page
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [OPEN, IN_PROGRESS, CLOSED, CANCELLED]
          description: Filter by case status
      responses:
        '200':
          description: Dashboard cases retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseWithAllegationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cms/v1/dashboard-stats:
    get:
      tags:
        - Case Management
      summary: Get dashboard statistics
      description: Get basic statistics for dashboard display
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
      responses:
        '200':
          description: Dashboard statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  allOpenCases:
                    type: integer
                    description: Number of open cases
                    example: 25
                  openInvestigations:
                    type: integer
                    description: Number of active investigations
                    example: 15
                  totalCases:
                    type: integer
                    description: Total number of cases
                    example: 150
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cms/v1/{caseNumber}/workflow-status:
    get:
      tags:
        - Case Management
      summary: Get workflow status
      description: Get the current workflow status and progress for a case
      parameters:
        - name: caseNumber
          in: path
          required: true
          schema:
            type: string
          description: Case number
          example: "CMS-2025-000001"
      responses:
        '200':
          description: Workflow status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ACTIVE"
                  caseNumber:
                    type: string
                    example: "CMS-2025-000001"
                  currentStatus:
                    type: string
                    example: "IN_PROGRESS"
                  message:
                    type: string
                    example: "Case is currently in IN_PROGRESS status"
                  lastUpdated:
                    type: string
                    format: date-time
                    example: "2025-01-15T10:30:00Z"
        '404':
          description: Case not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "NOT_FOUND"
                  message:
                    type: string
                    example: "No case found with number: CMS-2025-000001"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cms/v1/{caseNumber}/journey:
    get:
      tags:
        - Case Management
      summary: Get workflow journey
      description: Track the complete journey of a case through the workflow
      parameters:
        - name: caseNumber
          in: path
          required: true
          schema:
            type: string
          description: Case number
          example: "CMS-2025-000001"
      responses:
        '200':
          description: Workflow journey retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  caseNumber:
                    type: string
                    example: "CMS-2025-000001"
                  stages:
                    type: array
                    items:
                      type: object
                      properties:
                        stage:
                          type: string
                          example: "Intake"
                        status:
                          type: string
                          enum: [completed, in_progress, pending]
                          example: "completed"
                        timestamp:
                          type: string
                          format: date-time
                          example: "2025-01-15T10:30:00Z"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cms/v1/{caseNumber}/submit:
    post:
      tags:
        - Case Management
      summary: Submit case for workflow processing
      description: Submit a case to transition it to the next workflow step. Only Intake Analysts and Admins can submit cases.
      parameters:
        - $ref: '#/components/parameters/X-User-Id'
        - name: caseNumber
          in: path
          required: true
          schema:
            type: string
          description: Case number to submit
          example: "CMS-2025-000001"
      responses:
        '200':
          description: Case submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Case submitted successfully"
                  caseNumber:
                    type: string
                    example: "CMS-2025-000001"
                  previousStatus:
                    type: string
                    example: "OPEN"
                  newStatus:
                    type: string
                    example: "IN_PROGRESS"
                  submittedBy:
                    type: string
                    example: "user123"
                  submittedAt:
                    type: string
                    format: date-time
                    example: "2025-01-15T10:30:00Z"
        '400':
          description: Invalid request - case cannot be submitted from current status
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Case cannot be submitted from current status: CLOSED"
                  allowedStatuses:
                    type: array
                    items:
                      type: string
                    example: ["OPEN", "SUBMITTED", "IN_PROGRESS"]
                  currentStatus:
                    type: string
                    example: "CLOSED"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Case not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Case not found"
                  caseNumber:
                    type: string
                    example: "CMS-2025-000001"
        '500':
          description: Submission failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to submit case: workflow error"
                  caseNumber:
                    type: string
                    example: "CMS-2025-000001"

components:
  parameters:
    X-User-Id:
      name: X-User-Id
      in: header
      required: true
      schema:
        type: string
      description: User ID provided by API Gateway after session validation

  responses:
    UnauthorizedError:
      description: Unauthorized - No valid user ID provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ForbiddenError:
      description: Forbidden - User lacks required permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    BadRequestError:
      description: Bad request - Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    CreateCaseWithAllegationsRequest:
      type: object
      required:
        - title
        - reporterId
        - complainantName
        - allegations
      properties:
        # Case Basic Information
        title:
          type: string
          maxLength: 255
          description: Title of the case
          example: "Employee Misconduct Investigation"
        description:
          type: string
          maxLength: 1000
          description: Detailed description of the case
          example: "Investigation of multiple allegations against employee John Doe"
        priority:
          $ref: '#/components/schemas/Priority'
        category:
          type: string
          description: Case category
          example: "COMPLIANCE"

        # Case Dates
        occurrenceDate:
          type: string
          format: date
          description: Date when the incident occurred
          example: "2025-01-10"
        dateReportedToCiti:
          type: string
          format: date
          description: Date when incident was reported to Citi
          example: "2025-01-12"
        dateReceivedByEscalationChannel:
          type: string
          format: date
          description: Date received by escalation channel
          example: "2025-01-15"

        # Geographic and Legal Information
        clusterCountry:
          type: string
          description: Cluster/Country location
          example: "APAC/INDIA"
        legalHold:
          type: boolean
          default: false
          description: Legal hold status
        dataSourceId:
          type: string
          description: Data source identifier
        howComplaintEscalated:
          type: string
          description: How the complaint was escalated
          example: "Employee Reported"

        # Case Type and Department Information
        caseTypeId:
          type: integer
          description: Case type ID (references case_types table)
          example: 1
        departmentId:
          type: integer
          description: Department ID (references entitlements.departments)
          example: 1

        # Reporter and Assignment Information
        reporterId:
          type: string
          description: ID of the person reporting the case
          example: "alice.intake"
        assignedToUserId:
          type: string
          description: User ID to assign the case to
          example: "hr.manager"
        assignedToDepartment:
          type: string
          description: Department to assign the case to
          example: "HR"

        # Subject Information
        subjectType:
          type: string
          description: Type of subject
          example: "EMPLOYEE"
        subjectId:
          type: string
          description: Subject identifier
          example: "EMP001"

        # Complainant Information
        complainantName:
          type: string
          maxLength: 200
          description: Name of the person filing the complaint
          example: "Jane Smith"
        complainantEmail:
          type: string
          format: email
          maxLength: 255
          description: Email of the person filing the complaint
          example: "jane.smith@company.com"

        # Investigation Unit Details
        intakeAnalyst:
          type: string
          description: Intake analyst assigned
          example: "Sophie Smith (SS12345)"
        investigationManager:
          type: string
          description: Investigation manager
          example: "Tyler Keith (TK12345)"
        investigator:
          type: string
          description: Investigator assigned
          example: "John Doe (JD12345)"
        assignmentGroup:
          type: string
          description: Assignment group
          example: "APAC"
        outsideCounsel:
          type: boolean
          default: false
          description: Outside counsel required

        # Complex nested objects
        entities:
          type: array
          description: List of entities (people/organizations) involved in this case
          items:
            $ref: '#/components/schemas/EntityRequest'
        allegations:
          type: array
          minItems: 1
          maxItems: 10
          description: List of allegations associated with this case
          items:
            $ref: '#/components/schemas/AllegationRequest'
        narratives:
          type: array
          description: List of narratives associated with this case
          items:
            $ref: '#/components/schemas/NarrativeRequest'

    EntityRequest:
      type: object
      required:
        - type
        - relationshipType
      properties:
        type:
          type: string
          enum: [Person, Organisation]
          description: Type of entity
          example: "Person"
        relationshipType:
          type: string
          description: Relationship to case
          example: "Complainant"

        # Person fields
        soeid:
          type: string
          description: SOEID for person entities
        geid:
          type: string
          description: GEID for person entities
        firstName:
          type: string
          description: First name
          example: "John"
        middleName:
          type: string
          description: Middle name
          example: "Robert"
        lastName:
          type: string
          description: Last name
          example: "Doe"
        organizationName:
          type: string
          description: Organization name for organization entities

        # Contact Information
        address:
          type: string
          description: Full address
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        zip:
          type: string
          description: Zip code
        emailAddress:
          type: string
          format: email
          description: Email address
        phoneNumber:
          type: string
          description: Phone number
        preferredContactMethod:
          type: string
          description: Preferred contact method

        # Employment Information
        goc:
          type: string
          description: GOC (Global Operations Center)
        manager:
          type: string
          description: Manager name and SOEID
        hireDate:
          type: string
          format: date
          description: Hire date
        hrResponsible:
          type: string
          description: HR responsible person
        legalVehicle:
          type: string
          description: Legal vehicle
        managedSegment:
          type: string
          description: Managed segment
        relationshipToCiti:
          type: string
          description: Relationship to Citi
        anonymous:
          type: boolean
          default: false
          description: Anonymous flag
        investigationFunction:
          type: string
          default: "ER"
          description: Investigation function
          example: "ER"

    AllegationRequest:
      type: object
      required:
        - allegationType
      properties:
        allegationType:
          type: string
          description: Type of allegation
          example: "HARASSMENT"
        subject:
          type: string
          description: Subject person reference (SOEID or entity reference)

        # GRC Taxonomy
        grcTaxonomyLevel1:
          type: string
          description: GRC Taxonomy Level 1
        grcTaxonomyLevel2:
          type: string
          description: GRC Taxonomy Level 2
        grcTaxonomyLevel3:
          type: string
          description: GRC Taxonomy Level 3
        grcTaxonomyLevel4:
          type: string
          description: GRC Taxonomy Level 4

        investigationFunction:
          type: string
          default: "ER"
          description: Investigation function
          example: "ER"
        severity:
          $ref: '#/components/schemas/Severity'
        description:
          type: string
          maxLength: 2000
          description: Detailed description of the allegation
        narrative:
          type: string
          description: Allegation narrative for detailed explanation

    NarrativeRequest:
      type: object
      required:
        - type
        - narrative
      properties:
        type:
          type: string
          description: Type of narrative
          example: "Original Claim"
        title:
          type: string
          description: Title of the narrative
        narrative:
          type: string
          description: Narrative content with unlimited length and multilingual support
        investigationFunction:
          type: string
          default: "ER"
          description: Investigation function
          example: "ER"
        addedOn:
          type: string
          format: date-time
          description: Date when narrative was added

    CaseWithAllegationsResponse:
      type: object
      properties:
        caseId:
          type: string
          description: Case ID
          example: "CMS-2025-000001"
        caseNumber:
          type: string
          description: Case number
          example: "CMS-2025-000001"
        title:
          type: string
          description: Case title
          example: "Employee Misconduct Investigation"
        description:
          type: string
          description: Case description
          example: "Investigation of multiple allegations"
        priority:
          $ref: '#/components/schemas/Priority'
        status:
          $ref: '#/components/schemas/CaseStatus'
        complainantName:
          type: string
          description: Complainant name
          example: "Jane Smith"
        complainantEmail:
          type: string
          format: email
          description: Complainant email
          example: "jane.smith@company.com"
        workflowInstanceKey:
          type: integer
          format: int64
          description: Workflow instance key
          example: 123456
        createdAt:
          type: string
          format: date-time
          description: Case creation timestamp
          example: "2025-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Case last updated timestamp
          example: "2025-01-15T10:30:00Z"
        createdBy:
          type: string
          description: User who created the case
          example: "alice.intake"
        assignedTo:
          type: string
          description: User assigned to the case
          example: "hr.manager"
        processInstanceId:
          type: string
          description: Workflow process instance ID
          example: "fallback-1756483815281"
        initialTaskId:
          type: string
          description: Initial workflow task ID
          example: "task_789"
        currentTaskId:
          type: string
          description: Current workflow task ID
          example: "task_789"
        workflowMetadata:
          $ref: '#/components/schemas/WorkflowMetadata'
        allegations:
          type: array
          description: List of allegations
          items:
            $ref: '#/components/schemas/AllegationResponse'
        entities:
          type: array
          description: List of entities (people/organizations) involved
          items:
            $ref: '#/components/schemas/EntityResponse'
        narratives:
          type: array
          description: List of narratives
          items:
            $ref: '#/components/schemas/NarrativeResponse'

    AllegationResponse:
      type: object
      properties:
        allegationId:
          type: string
          description: Allegation ID
          example: "ALG-2025-001"
        allegationType:
          type: string
          description: Allegation type
          example: "Sexual Harassment"
        severity:
          $ref: '#/components/schemas/Severity'
        description:
          type: string
          description: Allegation description
        departmentClassification:
          type: string
          description: Department classification
          example: "HR"
        assignedGroup:
          type: string
          description: Assigned group
          example: "HR_SPECIALIST"
        flowablePlanItemId:
          type: string
          description: Flowable plan item ID
        createdAt:
          type: string
          format: date-time
          description: Allegation creation timestamp
          example: "2025-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Allegation last updated timestamp
          example: "2025-01-15T10:30:00Z"

    Priority:
      type: string
      enum: [LOW, MEDIUM, HIGH, CRITICAL]
      description: Priority level
      example: "HIGH"

    Severity:
      type: string
      enum: [LOW, MEDIUM, HIGH, CRITICAL]
      description: Severity level
      example: "HIGH"

    CaseStatus:
      type: string
      enum: [OPEN, IN_PROGRESS, SUBMITTED, CLOSED, CANCELLED]
      description: Case status
      example: "OPEN"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request"
        message:
          type: string
          description: Detailed error description
          example: "Field validation failed"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2025-01-15T10:30:00Z"

    WorkflowMetadata:
      type: object
      properties:
        processDefinitionKey:
          type: string
          description: Workflow process definition key
          example: "OneCMS_Workflow"
        processInstanceId:
          type: string
          description: Process instance ID
          example: "fallback-1756483815281"
        status:
          type: string
          description: Workflow status
          example: "STARTED"
        initialTask:
          $ref: '#/components/schemas/TaskInfo'
        currentTask:
          $ref: '#/components/schemas/TaskInfo'

    TaskInfo:
      type: object
      properties:
        taskId:
          type: string
          description: Task ID
          example: "task_789"
        taskName:
          type: string
          description: Task name
          example: "Intake Review"
        queueName:
          type: string
          description: Queue name
          example: "intake-analyst-queue"
        status:
          type: string
          enum: [OPEN, CLAIMED, COMPLETED]
          description: Task status
          example: "OPEN"

    EntityResponse:
      type: object
      properties:
        entityId:
          type: string
          description: Entity ID
          example: "ENT-1756483815246-769"
        entityType:
          type: string
          enum: [PERSON, ORGANIZATION]
          description: Entity type
          example: "PERSON"
        relationshipType:
          type: string
          description: Relationship to case
          example: "Complainant"
        displayName:
          type: string
          description: Display name
          example: "John Robert Doe"
        soeid:
          type: string
          description: SOEID for person entities
        emailAddress:
          type: string
          format: email
          description: Email address
        organizationName:
          type: string
          description: Organization name for organization entities
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-01-15T10:30:00Z"

    NarrativeResponse:
      type: object
      properties:
        narrativeId:
          type: string
          description: Narrative ID
          example: "NAR-1756483815246-769"
        narrativeType:
          type: string
          description: Narrative type
          example: "Original Claim"
        narrativeTitle:
          type: string
          description: Narrative title
          example: "Initial Report"
        narrativeText:
          type: string
          description: Narrative content
          example: "Employee reported harassment incident"
        investigationFunction:
          type: string
          description: Investigation function
          example: "ER"
        isRecalled:
          type: boolean
          description: Recall status
          example: false
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-01-15T10:30:00Z"